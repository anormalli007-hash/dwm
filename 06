data(iris)

# Normalization
normalize <- function(x) { (x - min(x)) / (max(x) - min(x)) }
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))

# Histogram before & after normalization
par(mfrow=c(1,2))
hist(iris$Sepal.Length, main="Original", col="skyblue")
hist(iris_norm$Sepal.Length, main="Normalized", col="lightgreen")














# Install required packages (run only once if not installed)
install.packages("rpart")
install.packages("rpart.plot")

# Load libraries
library(rpart)
library(rpart.plot)

# Train Decision Tree
model <- rpart(Species ~ ., data=iris, method="class")

# Plot Tree
rpart.plot(model, main="Decision Tree")

















set.seed(123)
iris_km <- kmeans(iris[,1:4], centers=3)

# Plot clustering
plot(iris[,1:2], col=iris_km$cluster, pch=19,
     main="K-Means Clustering", xlab="Sepal.Length", ylab="Sepal.Width")
points(iris_km$centers[,1:2], col=1:3, pch=8, cex=2)











# Install if not already installed
install.packages("arules")
install.packages("arulesViz")

library(arules)
library(arulesViz)

# Load dataset
data("Groceries")

# Generate rules
rules <- apriori(Groceries, parameter=list(supp=0.01, conf=0.5))

# Show top 5 rules
inspect(head(rules, 5))

# Plot top rules (graph)
plot(head(rules, 10), method="graph", engine="igraph")
